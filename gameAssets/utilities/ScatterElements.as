class utilities.ScatterElements {	private var classScope:Object;	private var xBegin:Number;	private var xEnd:Number;	private var yBegin:Number;	private var yEnd:Number;	private var elements:Array;	//	public function ScatterElements(classScope:Object, xBegin:Number, xEnd:Number, yBegin:Number, yEnd:Number, elements:Array) {		this.classScope = classScope;		this.xBegin = xBegin;		this.xEnd = xEnd;		this.yBegin = yBegin;		this.yEnd = yEnd;		this.elements = elements;		//		randomizeElements();		placeElements();		trace("Average width is... "+calculateAvg(_width));	}	//	// Randomize the order of the elements array	public function randomizeElements():Void {		var rndm:Array = new Array();		while (elements.length > 0) {			var rndmNum:Number = Math.round(Math.random() * (elements.length - 1));			rndm.push(elements[rndmNum]);			elements.splice(rndmNum, 1);		}		elements = rndm;	}	//	// Given the x and y boundaries, place all movie clips in the elements array in random order without overlapping	public function placeElements():Void {		/*for (var i:Number = 0; i < elements.length; i++) {			// *** Would a for loop be a good way to handle this?		}*/		// *** Or recursion instead?		setElement(elements);	}	//	// Recursive method to place each movie clip in it's own random place	private function setElement(temp:Array):Boolean {		if (temp.length == 0) {			trace("done setting the elements");			return true;		}				temp[0]._x = xBegin;		temp[0]._y = yBegin;						temp.splice(0, 1);		return setElement(temp);	}	//	// Helper function to calculate the average property value of all elements	private function calculateAvg(prop:Number):Number {		var total:Number = 0;		for (var i:Number = 0; i < elements.length; i++) {			total += elements[i].prop;		}		return total / elements.length;	}}