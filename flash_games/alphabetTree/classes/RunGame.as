import mx.utils.Delegate;import flash.external.ExternalInterface;import flash.geom.Point;//class RunGame extends LZGame implements gametypes.GroupingGame {	//	private var correctTree:CorrectTree;	private var treeOptionManager:TreeOptionManager;	private var timer:Timer;	private var correctFX:MovieClip;	private var incorrectFX:MovieClip;	public var currentCorrect:Number;	public var totalCorrect:Number;	//	public function RunGame(main:MovieClip) {		super(main);		//		correctTree = new CorrectTree(this);		treeOptionManager = new TreeOptionManager(this, questionList);		timer = new Timer(this);		timer.resumeTimer();		//		/*correctFX = new Sound();		correctFX.attachSound("whoosh.mp3");		incorrectFX = new Sound();		incorrectFX.attachSound("boing.mp3");*/		correctFX = main.attachMovie("_whoosh.mp3", "correctFX", main.getNextHighestDepth());		incorrectFX =main.attachMovie("_boing.mp3", "incorrectFX", main.getNextHighestDepth());		//		currentCorrect = 0;		totalCorrect = treeOptionManager.getTotalCorrectTrees();		//		correctTree.setGroupName(questionList.getOptions()[0]);	}	public function evaluate(attempt:Object):Void {		var tOption:TreeOption = TreeOption (attempt);		if (correctTree.checkForHit(tOption)) {			if (tOption.isCorrect()) {				correctAnswer();				var pt:Point = correctTree.getRandomTreeCoord();				tOption.setTargetPos(pt.x, pt.y);				tOption.disableClip();			} else {				incorrectAnswer();			}		} else {			tOption.resetPos();		}	}	public function correctAnswer():Void {		currentCorrect++;		if (currentCorrect == totalCorrect) { 		   	TimelineManager.registerClip(main.correct, this, winGame, [true], "correct_done");		}		correctFX.gotoAndPlay(2);		main.correct.gotoAndPlay("correct");	}	public function incorrectAnswer():Void {		treeOptionManager.resetClips();		correctTree.resetSpaces();		timer.resetCountDown();		incorrectFX.gotoAndPlay(2);		currentCorrect = 0;	}	public function winGame():Void {		treeOptionManager.removeClips();		timer.destroy();		main.gotoAndStop("win");	}	public function getScore():String {		return timer.getTotalTime();	}	//	public function pauseGame ():Void {		timer.pauseTimer ();	}	public function resumeGame ():Void {		timer.resumeTimer ();	}}