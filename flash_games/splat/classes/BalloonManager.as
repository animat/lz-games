class BalloonManager {	//	private var classScope:RunGame;	private var holder:MovieClip;	private var balloons:Array;	//	public function BalloonManager(classScope:RunGame) {		this.classScope = classScope;		holder = LZGame.getStage().createEmptyMovieClip("balloonHolder", 100);		holder._x = 0;		holder._y = 100;		balloons = new Array();	}	public function evaluate(attempt:Balloon):Void {		classScope.evaluate(attempt);	}	public function createBalloons(stimulus:String):Void {		var orderedDepth:Array = new Array();		var rndmDepth:Array = new Array();				for (var i:Number = 0; i < stimulus.length; i++) {			orderedDepth[i] = i;		}				while (orderedDepth.length > 0) {			var rndm = Math.round(Math.random() * (orderedDepth.length - 1));			rndmDepth.push(orderedDepth[rndm]);			orderedDepth.splice(rndm, 1);		}					for (i:Number = 0; i < stimulus.length; i++) {			if (stimulus.charAt(i) != " ") {				balloons.push(new Balloon(this, holder, i, stimulus.charAt(i), rndmDepth[i]));			}		}	}	public function destroyAllBalloons():Void {		for (var i:Number = 0; i < balloons.length; i++) {			if (!balloons[i].destroyed) {				balloons[i].destroy();				delete balloons[i];				balloons[i] = null;			}		}		balloons = new Array();	}		public function pauseBalloons():Void {		for (var i:Number = 0; i < balloons.length; i++) {			balloons[i].pauseBalloon();		}	}	public function resumeBalloons():Void {		for (var i:Number = 0; i < balloons.length; i++) {			balloons[i].resumeBalloon();		}	}}