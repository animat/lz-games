import mx.utils.Delegate;import flash.external.ExternalInterface;class RunGame extends LZGame implements gametypes.RecognitionGame {	//	public var cardManager:CardManager;	public var cardInFocus:Card;	public var cardPair:Card;	public var correctPairs:Number;	public var timer:Timer;	private var correctInterval:Number;	private var incorrectInterval:Number;	private var moveToSideFX:MovieClip;	//	public function RunGame(main:MovieClip) {		super(main);		//		cardManager = new CardManager(this, questionList);		cardInFocus = null;		cardPair = null;		correctPairs = 0;		timer = new Timer(this, 252, 313, 100);		//		moveToSideFX = main.attachMovie("_whoosh.mp3", "moveToSideFX", main.getNextHighestDepth());	}	public function attemptAnswer(attempt:Object):Void {		setBusy(true);		if (cardInFocus == null) {			cardInFocus = Card(attempt);			setBusy(false);		} else {			cardPair = Card(attempt);			evaluate();		}	}	public function continuePlaying():Void {		cardInFocus = null;		cardPair = null;		clearInterval(correctInterval);		clearInterval(incorrectInterval);		setBusy(false);		timer.resumeTimer();	}	public function evaluate():Void {		if (cardManager.findMatch(cardInFocus, cardPair)) {			TimelineManager.registerClip(main.cardHolder.card_0, this, correctWait, [], "showing");		} else {			TimelineManager.registerClip(main.cardHolder.card_0, this, incorrectWait, [], "showing");		}	}	public function correctWait():Void {		correctInterval = setInterval(this, "correctAnswer", 1000);		timer.pauseTimer();	}	public function correctAnswer():Void {		moveToSideFX.gotoAndPlay(2);		cardInFocus.correctAnim(520, correctPairs * 30);		cardInFocus.setActive(false);		cardPair.correctAnim(550, correctPairs * 30);		cardPair.setActive(false);		correctPairs++;		if (cardManager.getPairsLeft() == 0) {			winGame();			clearInterval(correctInterval);		} else {			continuePlaying();		}	}	public function incorrectWait():Void {		incorrectInterval = setInterval(this, "incorrectAnswer", 1500);		timer.pauseTimer();	}	public function incorrectAnswer():Void {		cardInFocus.flip();		cardPair.flip();		continuePlaying();	}	public function winGame():Void {		main.gotoAndPlay("win");		timer.stopTimer();	}		public function getScore():String {		return String(timer.getTime());	}		public function pauseGame():Void {		timer.pauseTimer();	}	public function resumeGame():Void {		timer.resumeTimer();	}}