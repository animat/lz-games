import mx.utils.Delegate;//class Plant {	//	private var clip:MovieClip;	private var flowerhead:MovieClip;	private var manager:PlantManager;	private var question:Question;	private var totalLetters:Number;	private var lettersLeft:Number;	//	private var textFmt:TextFormat;	private var shadowFmt:TextFormat;	//	public function Plant(question:Question, holder:MovieClip, plantNum:Number, manager:PlantManager) {		this.question = question;		this.manager = manager;		totalLetters = question.getResponses()[0].getStimulus().getContent().length;		lettersLeft = totalLetters;		textFmt = new TextFormat("Arial", 16, 0xFFFFFF);		shadowFmt = new TextFormat("Arial", 16, 0x333333);		//		createPlant(holder, plantNum);	}	private function createPlant(holder:MovieClip, plantNum:Number):Void {		clip = holder.createEmptyMovieClip("plant_"+plantNum, holder.getNextHighestDepth());		attachFlowerhead();		attachStems();		flowerhead.swapDepths(clip.stem_0);	}	private function attachFlowerhead():Void {		flowerhead = clip.attachMovie("flowerhead", "flowerhead", clip.getNextHighestDepth());		flowerhead._visible = false;		flowerhead.stop();	}	private function attachStems():Void {		var q:String = question.getResponses()[0].getStimulus().getContent();		var yPos:Number = clip.flowerhead._height;		for (var i:Number = 0; i < q.length; i++) {			var newStem:MovieClip = clip.attachMovie("stem_"+random(3), "stem_"+i, clip.getNextHighestDepth());			newStem._y = yPos;			yPos += newStem._height - 1;			createTextfield(newStem, q.charAt(i));		}		var bottomStem:MovieClip = clip.attachMovie("stem_1", "bottom_stem", i + 1);		bottomStem._y = yPos;	}	private function createTextfield(stemClip:MovieClip, letter:String):Void {		var letterClip = stemClip.createEmptyMovieClip("letter", 1);		letterClip.createTextField("textfield", 1, 0, 7, 0, 0);		letterClip.textfield.autoSize = true;		letterClip.textfield.selectable = false;		letterClip.textfield.setNewTextFormat(textFmt);		letterClip.textfield.text = letter;		letterClip.createTextField("textShadow", 0, 2, 9, 0, 0);		letterClip.textShadow.autoSize = true;		letterClip.textShadow.selectable = false;		letterClip.textShadow.setNewTextFormat(shadowFmt);		letterClip.textShadow.text = letter;		letterClip._x = -(letterClip._width / 2);	}	public function showCorrectFlowerhead():Void {		flowerhead._visible = true;		flowerhead.gotoAndPlay("correct_1");		LZGame.getInstance().increaseBlossomedPlants();	}	public function showIncorrectFlowerhead():Void {		flowerhead._visible = true;		flowerhead.gotoAndPlay("incorrect_1");		LZGame.getInstance().increaseBlossomedPlants();	}	public function reset():Void {		flowerhead.removeMovieClip();		clip.removeMovieClip();	}	//	public function setPos(xx:Number, yy:Number):Void {		clip._x = xx;		clip._y = yy;	}	public function getClip():MovieClip {		return clip;	}	public function getQuestion():Question {		return question;	}	public function isGrowing():Boolean {		return lettersLeft != 0;	}	public function getLettersLeft():Number {		return lettersLeft;	}	public function decreaseLettersLeft():Void {		lettersLeft--;	}	public function setLettersLeft(num:Number):Void {		lettersLeft = num;	}	public function getNextRevealHeight():Number {		var tmp:Number = totalLetters - lettersLeft;		return clip["stem_"+tmp]._height - 1;	}	public function getBlossomRevealHeight():Number {		var tmp:Number = 0;		for (var i:Number = totalLetters - lettersLeft; i < totalLetters; i++) {			tmp += clip["stem_"+i]._height;		}		return tmp;	}	public function setClipFilters(filt:Array):Void {		clip.filters = filt;	}	public function toString():String {		return question.toString();	}}