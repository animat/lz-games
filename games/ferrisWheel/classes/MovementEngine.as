import mx.utils.Delegate;class MovementEngine {	private var soundFX1:MovieClip;	private var soundFX2:MovieClip;	private var soundFX3:MovieClip;	private var soundFX4:MovieClip;	private var soundFX5:MovieClip;	private var soundFX6:MovieClip;	private var classScope:Object;	private var letters:Array;		private var speed:Number;	private var stopped:Boolean;	private var setWait:Number;		private static var textFormatting = new TextFormat("Arial", 40, 0xFFFFFF, true);	private static var shadowFormatting = new TextFormat("Arial", 40, 0x000000, true);	private static var highlightFormatting = new TextFormat("Arial", 40, 0xFF0000, true);	private static var WHEEL_PAUSE_TIME = 2000;	private static var INIT_SPEED = 1;	private static var SPEED_MAX = 3.5;		public function MovementEngine(classScope:Object, letters:Array) {		soundFX1 = LZGame.getStage().attachMovie("soundFX1", "soundFX1", LZGame.getStage().getNextHighestDepth());		soundFX2 = LZGame.getStage().attachMovie("soundFX2", "soundFX2", LZGame.getStage().getNextHighestDepth());		soundFX3 = LZGame.getStage().attachMovie("soundFX3", "soundFX3", LZGame.getStage().getNextHighestDepth());		soundFX4 = LZGame.getStage().attachMovie("soundFX4", "soundFX4", LZGame.getStage().getNextHighestDepth());		soundFX5 = LZGame.getStage().attachMovie("soundFX5", "soundFX5", LZGame.getStage().getNextHighestDepth());		soundFX6 = LZGame.getStage().attachMovie("soundFX6", "soundFX6", LZGame.getStage().getNextHighestDepth());		this.classScope = classScope;		this.letters = letters;				speed = 1;		stopped = false;				placeLetters();		LZGame.getStage().onEnterFrame = Delegate.create(this, spinWheel);	}		private function placeLetters():Void {		var reverseCounter:Number = letters.length - 1;		for (var i:Number = 1; i < letters.length; i++) {			var seat_mc = LZGame.getStage().wheel["seat"+i];			seat_mc.createTextField("textfield", i * 2, -13, -21, 0, 0);			seat_mc.createTextField("textShadow", i, -10, -18, 0, 0);			seat_mc.textfield.autoSize = true;			seat_mc.textShadow.autoSize = true;			seat_mc.textfield.selectable = false;			seat_mc.textShadow.selectable = seat_mc.textfield.selectable;			seat_mc.textfield.setNewTextFormat(textFormatting);			seat_mc.textShadow.setNewTextFormat(shadowFormatting);			seat_mc.textfield.text = letters[reverseCounter];			seat_mc.textShadow.text = letters[reverseCounter];			reverseCounter--;		}	}		private function spinWheel():Void {		if (!stopped) {			// Spin the wheel			LZGame.getStage().wheel._rotation += speed;			// Spin the seats the opposite way			for (var i:Number = 1; i < letters.length; i++) {				var currentSeat = LZGame.getStage().wheel["seat"+i];				currentSeat._rotation -= speed;				if (currentSeat._x > -35 && currentSeat._x < 35 && currentSeat._y < -290) {					currentSeat.textfield.setTextFormat(highlightFormatting);					trace("Movement engine :: highlight focus letter!");				}			}		}	}		public function stopWheel():Void {		stopped = true;		setWait = setInterval(Delegate.create(this, wait), WHEEL_PAUSE_TIME);	}		private function wait(): Void {		stopped = false;		clearInterval(setWait);	}		public function increaseSpeed():Void {		if (speed < SPEED_MAX) {			speed += .5;			if (speed == 1 || speed == -1) {				soundFX1.play();			} else if (speed == 1.5 || speed == -1.5) {				soundFX2.play();			} else if (speed == 2 || speed == -2) {				soundFX3.play();			} else if (speed == 2.5 || speed == -2.5) {				soundFX4.play();			} else if (speed == 3 || speed == -3) {				soundFX5.play();			} else if (speed == 3.5 || speed == -3.5) {				soundFX6.play();			}		}	}	public function decreaseSpeed():Void {		if (speed > -SPEED_MAX) {			speed -= .5;				if (speed == 1 || speed == -1) {				soundFX1.play();			} else if (speed == 1.5 || speed == -1.5) {				soundFX2.play();			} else if (speed == 2 || speed == -2) {				soundFX3.play();			} else if (speed == 2.5 || speed == -2.5) {				soundFX4.play();			} else if (speed == 3 || speed == -3) {				soundFX5.play();			} else if (speed == 3.5 || speed == -3.5) {				soundFX6.play();			}		}	}	public function resetSpeed():Void {		speed = INIT_SPEED;	}	//	public function spinRight():Void {		increaseSpeed();		if (speed == 0) {			speed = .5;		}	}	public function spinLeft():Void {		decreaseSpeed();		if (speed == 0) {			speed = -.5;		}	}		public function pauseWheel():Void {		stopped = true;	}	public function resumeWheel():Void {		stopped = false;	}}