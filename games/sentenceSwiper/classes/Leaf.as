import mx.utils.Delegate;class Leaf {	private var clip:MovieClip;	private var speed:Number;	private var originalSpeed:Number;	private var dampen:Number;	private var maxX:Number;	private var paused:Boolean;		public function Leaf(holder:MovieClip) {		clip = holder.attachMovie("leaf", "leaf", holder.getNextHighestDepth(), {_x: 10, _y: 50});		speed = 8;		originalSpeed = 8;		dampen = -.88;		paused = false;		clip.onEnterFrame = Delegate.create(this, scan);	}		private function scan():Void {		if (!paused) {			clip._x += speed;			if (clip._x < 0) {				clip._x = 0;				speed *= dampen;				if (speed < 1.5) {					speed = 1.5;				}			} else if (clip._x > maxX) {				clip._x = maxX;				speed *= dampen;				if (speed > -1.5) {					speed = -1.5;				}			}		}	}		public function destroy():Void {		delete clip.onEnterFrame;		removeMovieClip(clip);		delete this;	}		public function resetSpeed():Void {		speed = originalSpeed;	}	public function setBounds(mc:MovieClip):Void {		maxX = mc._width - (clip._width / 2);	}	public function getClip():MovieClip {		return clip;	}		public function pauseLeaf():Void {		paused = true;	}	public function resumeLeaf():Void {		paused = false;	}}