import mx.utils.Delegate;//class Bullet{	private var classScope:Object;	private var clip:MovieClip;	private var speed:Number;	private var initSpeed:Number;	private var increment:Number	private var rootIncrement:Number;	private var active:Boolean;	//	public function Bullet(classScope:Object, shipX:Number, shipY:Number) {		this.classScope = classScope;		fire(shipX, shipY);	}	public function fire(shipX:Number, shipY:Number):Void {		speed = initSpeed = 0.5;		increment = 1;		rootIncrement = 0.1;		clip = LZGame.getStage().attachMovie("bullet", "bullet", 99);		clip._x = shipX;		clip._y = shipY;		active = true;		clip.onEnterFrame = Delegate.create(this, moveBullet);	}	private function moveBullet() {		moveUp();		checkForDelete();		ufoCheck();	}	private function moveUp():Void {		clip._y -= speed;		speed += increment;		increment += rootIncrement;	}	private function checkForDelete():Void {		if (clip._y < 0 - clip._height) {			delete clip.onEnterFrame;			removeMovieClip(clip);			active = false;			speed = initSpeed;		}	}	private function ufoCheck() {		var ufosArr:Array = classScope.ufoManager.activatedUfos		for (var i:Number = 0; i < ufosArr.length; i++) {			if (clip.hitTest(ufosArr[i].getClip())) {				classScope.evaluate(ufosArr[i]);				removeMovieClip(clip);			}		}	}	public function resetSpeed(newSpeed:Number, newIncrement:Number, newRootIncrement:Number) {		rootIncrement = newRootIncrement;		speed = newSpeed;		increment = newIncrement;	}	public function getClip():MovieClip {		return clip;	}}