class UfoManager {	private var classScope:Object;	private var options:Array;	private var ufos:Array;	private var releaseUfoInterval:Number;	private var releaseSpeed:Number;	private var ufoBaseSpeed:Number;	public var activatedUfos:Array;	private var deactivatedUfos:Array;	private var ufoHolder:MovieClip;	//	public function UfoManager(classScope:Object, options:Array) {		this.classScope = classScope;		this.options = options;		ufos = new Array();		activatedUfos = new Array();		deactivatedUfos = new Array();		ufoHolder = LZGame.getStage().createEmptyMovieClip("ufoHolder", LZGame.getStage().getNextHighestDepth());		//		if (classScope.difficulty == 1) {			releaseSpeed = 4000;			ufoBaseSpeed = 2.5;		} else if (classScope.difficulty == 2) {			releaseSpeed = 3000;			ufoBaseSpeed = 4;		}		releaseUfoInterval = setInterval(this, "releaseUfo", releaseSpeed);		//		createUfos();		releaseUfo();	}	public function createUfos():Void {		for (var i:Number = 0; i < options.length; i++) {			var newUfo:Ufo = new Ufo(this, ufoHolder, options[i], i);			newUfo.setBaseSpeed(ufoBaseSpeed);			ufos.push(newUfo);		}	}	public function resetAllUfos():Void {		deactivatedUfos = new Array();		for (var i:Number = 0; i < ufos.length; i++) {			if (!ufos[i].isActive()) {				deactivatedUfos.push(ufos[i]);			}		}	}	public function releaseUfo():Void {		if (deactivatedUfos.length == 0) {			resetAllUfos();		}		var releaseRandom:Number = Math.round(Math.random() * deactivatedUfos.length);		trace("releaseRandom :: "+releaseRandom);		activateUfo(releaseRandom);		/*		// Dev trace to provide information on activated and deactivated arrays		trace("Deactivated ufos ("+deactivatedUfos.length+")... ");		for (var i:Number = 0; i < deactivatedUfos.length; i++) {			trace("  "+deactivatedUfos[i].getOption().getStimulus());		}		trace("Activated ufos ("+activatedUfos.length+")");		for (i = 0; i < activatedUfos.length; i++) {			trace("  "+activatedUfos[i].getOption().getStimulus());		}		trace("~~~~~~");		*/	}	public function activateUfo(index:Number):Void {		var tmp:Ufo = deactivatedUfos[index];		if (tmp == undefined || tmp == null) {			releaseUfo();		} else {			activatedUfos.push(deactivatedUfos[index]);			deactivatedUfos.splice(index, 1);			tmp.activateUfo();		}	}	public function deactivateUfo(ufo:Ufo):Void {		for (var i:Number = 0; i < activatedUfos.length; i++) {			if (activatedUfos[i] == ufo) {				activatedUfos.splice(i, 1);			}		}	}	public function disableUfos():Void {		clearInterval(releaseUfoInterval);		for (var i:Number = 0; i < activatedUfos.length; i++) {			activatedUfos[i].getClip()._alpha = 40;		}	}	public function pauseUfos():Void {		clearInterval(releaseUfoInterval);		for (var i:Number = 0; i < activatedUfos.length; i++) {			activatedUfos[i].pauseUfo();		}	}	public function resumeUfos():Void {		releaseUfoInterval = setInterval(this, "releaseUfo", releaseSpeed);		for (var i:Number = 0; i < activatedUfos.length; i++) {			activatedUfos[i].resumeUfo();		}	}	//	public function getUfosAmount():Number {		return ufos.length;	}	public function setUfoBaseSpeed(num:Number):Void {		ufoBaseSpeed = num;	}	public function setReleaseSpeed(num:Number):Void {		releaseSpeed = num;	}}