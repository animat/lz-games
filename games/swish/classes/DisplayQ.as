import mx.transitions.Tween;class DisplayQ {	//	private var beeperFX:MovieClip;	private var buzzerFX:MovieClip;	private var timer:MovieClip;	private var classScope:RunGame;	private var clip:MovieClip;	private var overlay:MovieClip;	private var inputText:utilities.LZInputText;	private var correctAnswerTxt:TextField;	private var submit_btn:MovieClip;	private var inputShowing:Boolean;	private var wa:MovieClip; 	private var shootingCountdown:Number;	private var shootingTimeLeft:Number;	//	public function DisplayQ(classScope:RunGame) {		beeperFX = LZGame.getStage().attachMovie("_beep.mp3", "beeperFX", LZGame.getStage().getNextHighestDepth());		buzzerFX = LZGame.getStage().attachMovie("_buzzer.mp3", "buzzerFX", LZGame.getStage().getNextHighestDepth());		this.classScope = classScope;		overlay = LZGame.getStage().attachMovie("overlay", "overlay", LZGame.getStage().getNextHighestDepth());		overlay._x = 0;		overlay._y = 0;		overlay._alpha = 40;		clip = LZGame.getStage().attachMovie("userInput", "userInput", LZGame.getStage().getNextHighestDepth());		clip._x = 170;		clip._y = 170;		submit_btn = LZGame.getStage().attachMovie("submit_btn", "submit_btn", LZGame.getStage().getNextHighestDepth());		submit_btn._x = 450;		submit_btn._y = 250;		wa = LZGame.getStage().attachMovie("wronganswer", "wronganswer1", LZGame.getStage().getNextHighestDepth());		wa._x = 160;		wa._y = 320;		if (inputText != undefined) {			inputText.destroy();		}		inputText = new utilities.LZInputText(clip, "inputText", 246, 31);		inputText.setPos(5, 75);		inputText.setTextFormat(new TextFormat("Arial", 16, 0xFFFFFF));		inputText.hideBorder();		correctAnswerTxt = LZGame.getStage().ca_txt;		inputShowing = true;		shootingTimeLeft = 10;		timer = LZGame.getStage().attachMovie("timer", "actualTimer", LZGame.getStage().getNextHighestDepth());		// *** TODO : Beware of hardcoded stage width		timer._x = 600 - timer._width;		timer._y = 5;	}	//	public function showUserInput():Void {		clip._visible = true;		overlay._visible = true;		submit_btn.enabled = true;		submit_btn._visible = true;		inputShowing = true;		shootingTimeLeft = 10;		classScope.foreignChars.setShowable(true);		timer.gotoAndStop("up");	}		public function hideUserInput():Void {		clip._visible = false;		overlay._visible = false;		submit_btn.enabled = false;		submit_btn._visible = false;		inputShowing = false;		classScope.foreignChars.setShowable(false);		shootingCountdown = setInterval(this, "countdown", 1000);		timer.gotoAndStop("down");		timer.timerMC.timerAnim.timerText.text = shootingTimeLeft;	}	private function countdown():Void {		if (shootingTimeLeft < 2) {			classScope.nextQuestion(true);			buzzerFX.gotoAndPlay(2);		} else {			shootingTimeLeft -= 1;			timer.timerMC.timerText.text = shootingTimeLeft;			beeperFX.gotoAndPlay(2);		}	}	public function hideTimer() {		timer.gotoAndStop("up");	}		public function displayFeedback(expected:String):Void {		inputText.displayFeedback(expected);	}		public function endCountdown():Void {		clearInterval(shootingCountdown);	}	public function displayQuestion(str:String):Void {		clip.qTxt.text = str;	}	public function setFocusOnA():Void {		inputText.enable();	}	public function getInputString():String {		return inputText.getInput();	}	public function clearAnswerText():Void {		inputText.clearText();	}	public function get input_textField():TextField{		return inputText.getTextField();	}														public function playWrongAnswer():Void {		wa.play();	}	public function setCorrectAnswerText(str:String):Void {		correctAnswerTxt.text = str;	}	public function displayCorrectAnswer():Void {		correctAnswerTxt.text = getInputString();	}	public function clearCorrectAnswer():Void {		correctAnswerTxt.text = "";	}	public function isInputShowing():Boolean {		return inputShowing;	}}