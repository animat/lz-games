import mx.utils.Delegate;import mx.transitions.Tween;//class Timer {	//	private var classScope:RunGame;	private var clip:MovieClip;	private var initTimeLeft:Number;	private var timeLeft:Number;	private var countDownInterval:Number;	private var totalTimeCounter:Number;	//	public function Timer(classScope:RunGame) {		this.classScope = classScope;		clip = LZGame.getStage().attachMovie("timer", "timer", LZGame.getStage().getNextHighestDepth());		clip._x = 550;		clip._y = 50;		timeLeft = 30;		initTimeLeft = 30;		totalTimeCounter = 0;	}	public function resumeTimer():Void {		clearInterval(countDownInterval);		countDownInterval = setInterval(this, "countDown", 1000);	}	public function pauseTimer():Void {		clearInterval(countDownInterval);	}	private function countDown():Void {		timeLeft--;		totalTimeCounter++;		clip.counter = timeLeft;		if (timeLeft <= 15) {			clip._y -= 15;			new Tween(clip, "_y", mx.transitions.easing.Bounce.easeOut, clip._y, clip._y + 15, 1, true);			}		if (timeLeft < 1) {			timeLeft = initTimeLeft;			classScope.incorrectAnswer();		}	}	public function resetCountDown():Void {		timeLeft = initTimeLeft;	}	public function addSeconds(amnt:Number):Void {		timeLeft += amnt;	}	public function setCount(amnt:Number):Void {		timeLeft = amnt;		initTimeLeft = amnt;		clip.timeDisplay = timeLeft;	}	public function destroy():Void {		clip.removeMovieClip();		pauseTimer();	}	public function getTotalTime():String {		return String(totalTimeCounter);	}}