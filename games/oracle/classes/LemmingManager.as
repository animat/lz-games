import mx.utils.Delegate;//class LemmingManager {		private var lemmings:Array;	private var currentLemmings:Number;	private var maxLemmings:Number;		public function LemmingManager() {		lemmings = new Array();		maxLemmings = 10;		currentLemmings = maxLemmings;				updateLemmingCounter();		createLemmings();	}		private function createLemmings():Void {		for (var i:Number = 0; i < maxLemmings; i++) {			var rndm:Number = random(90);			if (rndm < 10) {				var lem:Object = new Fatbug(this, i);			} else if (rndm < 20) {				var lem:Object = new Flora(this, i);			} else if (rndm < 30) {				var lem:Object = new Squishy(this, i);			} else if (rndm < 40) {				var lem:Object = new Zap(this, i);			} else if (rndm < 50) {				var lem:Object = new Pigdragon(this, i);			} else if (rndm < 60) {				var lem:Object = new Robot(this, i);			} else if (rndm < 70) {				var lem:Object = new Elk(this, i);			} else if (rndm < 75) {				var lem:Object = new Birdkin(this, i);			} else if (rndm < 80) {				var lem:Object = new MrBunny(this, i);			} else if (rndm < 85) {				var lem:Object = new Tapir(this, i);			} else if (rndm < 90) {				var lem:Object = new Harold(this, i);			}			lemmings.push(lem);		}	}		public function lemmingsAreSafe(screen:Screen):Boolean {		for (var i:Number = 0; i < lemmings.length; i++) {			if (!lemmings[i].hasArrived()) {				return false;			}		}		return true;	}		public function setDestination(xx:Number):Void {		for (var i:Number = 0; i < lemmings.length; i++) {			lemmings[i].setDestination(xx);		}	}		public function checkForCollisions(clip:MovieClip):Void {		for (var i:Number = 0; i < lemmings.length; i++) {			if (lemmings[i].checkForCollision(clip)) {				if (lemmings[i].isAlive()) {					lemmings[i].die();					if (!lemmings[i].isAlive()) {						currentLemmings--;						lemmings.splice(i, 1);						if (currentLemmings == 0) {							LZGame.getInstance().loseGame();						}					}				}			}		}	}		public function updateLemmingCounter():Void {		LZGame.getStage().lemmingCounter.text = currentLemmings;	}		public function getLemmingsLeft():Number {		return currentLemmings;	}}