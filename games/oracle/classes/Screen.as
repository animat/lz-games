import mx.utils.Delegate;import mx.transitions.Tween;class Screen {	private var correctTarget:Boolean;	private var id:Number;	private var clip:MovieClip;	private var manager:ScreenManager;	private var optionDisplay:OOptionDisplay;	private var stim:Stimulus;	private var loading:Boolean;		public function Screen(id:String) {		clip = LZGame.getStage().attachMovie("frame"+id, "frame"+id, LZGame.getStage().getNextHighestDepth());		this.id = Number(id);		if (id == "1") {			clip._x = 10;			clip._y = 118;		} else if (id == "2") {			clip._x = 157;			clip._y = 155;		} else if (id == "3") {			clip._x = 320;			clip._y = 158;		} else {			clip._x = 465;			clip._y = 137;		}		showLoading();		clip.onRelease = Delegate.create(this, evaluate);	}	private function evaluate():Void {		if (LZGame.getInstance().evaluate(this)) {			showCorrect();			correctTarget = true;		} else {			showWrong();			correctTarget = false;		}	}		public function reset():Void {		//showLoading();		clip.gotoAndStop("loading");		removeMovieClip(clip);	}	public function isCorrectTarget():Boolean {		return correctTarget;	}	public function setCorrectTarget(val:Boolean):Void {		correctTarget = val;	}		public function setManager(man:ScreenManager):Void {		manager = man;	}	public function showLoading():Void {		loading = true;		clip.gotoAndStop("loading");	}	public function showDisplay():Void {		loading = false;		clip.gotoAndStop("display");	}	public function showCorrect():Void {		clip.gotoAndPlay("correct");	}	public function showWrong():Void {		clip.gotoAndPlay("wrong");	}	public function setStimulus(stim:Stimulus):Void {		this.stim = stim;		clip.gotoAndStop("display");	}	public function getStimulus():Stimulus {		return stim;	}	public function getId():Number {		return id;	}	public function getPosition():Number {		return clip._x + (clip._width / 2);	}	public function getX():Number {		return clip._x;	}	public function getLoader():MovieClip {		return clip.loader;	}}