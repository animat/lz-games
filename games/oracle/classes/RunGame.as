import mx.utils.Delegate;import flash.external.ExternalInterface;import flash.display.BitmapData;import mx.transitions.Tween;//class RunGame extends LZGame implements gametypes.MultipleChoiceGame {	private var congrats:MovieClip;	private var camHolder:MovieClip;	private var loseGameOutro:MovieClip;	private var screenManager:ScreenManager;	private var lemmingManager:LemmingManager;	private var projectileManager:ProjectileManager;	private var projectileWait:Number;	private var badGuy:BadGuy;	private var oracle:Oracle;	private var questionDelay:Number;	private var correctAnswerDelay:Number;		public function RunGame(main:MovieClip) {		super(main);				screenManager = new ScreenManager();				lemmingManager = new LemmingManager();		projectileManager = new ProjectileManager();		badGuy = new BadGuy();		oracle = new Oracle();				LZGame.setInstance(this);		nextQuestion(false);	}		public function checkForCollisions(clip:MovieClip):Void {		lemmingManager.checkForCollisions(clip);		lemmingManager.updateLemmingCounter();	}		public function nextQuestion(proceed:Boolean):Void {		if (proceed == "true" || proceed == true) {			questionList.increaseQNum();		}		if (questionList.getQuestionsLeft() == 0) {			winGame();		} else {			LZGame.setBusy(false);			badGuy.launchProjectile();			screenManager.resetOptions();			oracle.clearSpeechBubble();			questionDelay = setInterval(this, "refreshQDisplay", 2500);		}	}		public function refreshQDisplay():Void {		clearInterval(questionDelay);		var scr:Screen = screenManager.setOptions(questionList.getCurrentQ().getOptions());		lemmingManager.broadcastCorrectTarget(scr);		oracle.speak(questionList.getCurrentQ().getStimulus());		projectileWait = setInterval(this, "dropProjectiles", 5000);	}	private function dropProjectiles():Void {		clearInterval(projectileWait);		projectileManager.dropProjectiles(screenManager.getIncorrectScreens());	}		public function evaluate(attempt:Object):Boolean {		if (!LZGame.isBusy()) {			var userResponse:Response = new Response();			userResponse.setStimulusFull(attempt.getStimulus());			lemmingManager.setDestination(attempt);			if (questionList.getCurrentQ().evaluate(userResponse)) {				correctAnswer(attempt);				LZGame.setBusy(true);				return true;			} else {				incorrectAnswer(attempt);				return false;			}		}	}		public function correctAnswer(attempt:Object):Void {		oracle.showHappy();		correctAnswerDelay = setInterval(this, "checkForSafeLemmings", 500);	}	private function checkForSafeLemmings():Void {		if (lemmingManager.lemmingsAreSafe()) {			clearInterval(correctAnswerDelay);			projectileManager.halt();			oracle.clearSpeechBubble();			nextQuestion(true);		}	}		public function incorrectAnswer(attempt:Object):Void {		oracle.showAngry();	}					public function jumpUp():Void {		var xx:Number = 450 - oracle.clip._x;		var yy:Number = 40 - oracle.clip._y;		var camX:Number = 400;		var camY:Number = 140;		var twn:Tween = new Tween(oracle.oracle, "_y", mx.transitions.easing.Regular.easeIn, oracle.oracle._y, yy, .75, true);		var twn2:Tween = new Tween(oracle.oracle, "_x", mx.transitions.easing.Regular.easeIn, oracle.oracle._x, xx, .75, true);		var camyscale:Tween = new Tween(camHolder, "_yscale", mx.transitions.easing.Regular.easeIn, camHolder._yscale, 65, .75, true);		var camxscale:Tween = new Tween(camHolder, "_xscale", mx.transitions.easing.Regular.easeIn, camHolder._xscale, 65, .75, true);		var camxmove:Tween = new Tween(camHolder, "_x", mx.transitions.easing.Regular.easeIn, 300, camX, .75, true);				var camymove:Tween = new Tween(camHolder, "_y", mx.transitions.easing.Regular.easeIn, 200, camY, .75, true);				twn2.onMotionFinished = Delegate.create(this, jumpDown);	}		public function jumpDown():Void {		var camyscale:Tween = new Tween(camHolder, "_yscale", mx.transitions.easing.Regular.easeIn, camHolder._yscale, 40, 2, true);		var camxscale:Tween = new Tween(camHolder, "_xscale", mx.transitions.easing.Regular.easeIn, camHolder._xscale, 40, 2, true);		var xx:Number = screenManager.getCorrectScreen().getPosition() + 60 - oracle.clip._x;		var yy:Number = 345 - oracle.clip._y;		var camX:Number = screenManager.getCorrectScreen().getPosition() + 60;		var camY:Number = 325;		var twn:Tween = new Tween(oracle.oracle, "_y", mx.transitions.easing.Bounce.easeOut, oracle.oracle._y, yy, 3.4, true);		var twn2:Tween = new Tween(oracle.oracle, "_x", mx.transitions.easing.Bounce.easeOut, oracle.oracle._x, xx, 3.4, true);		var camxmove:Tween = new Tween(camHolder, "_x", mx.transitions.easing.Regular.easeIn, camHolder._x, camX, 1.65, true);				var camymove:Tween = new Tween(camHolder, "_y", mx.transitions.easing.Regular.easeIn, camHolder._y, camY, 1.65, true);			camymove.onMotionFinished = Delegate.create(this, displayCongrats);	}	private function displayCongrats():Void {		oracle.oracle.gotoAndPlay("dancing");		congrats = LZGame.getStage().attachMovie("greatjob", "greatjob", LZGame.getStage().getNextHighestDepth());		congrats._x = camHolder._x;		congrats._y = 285;		congrats._xscale = 70;		congrats._yscale = 70;		trace(congrats+", "+congrats._x+" , "+congrats._y);	}		public function winGame():Void {		camHolder = LZGame.getStage().attachMovie("cam", "cam", LZGame.getStage().getNextHighestDepth());		jumpUp();		LZGame.getStage().gotoAndStop("win");		projectileManager.halt();		badGuy.destroy();		lemmingManager.dance();	}	public function loseGame():Void {		loseGameOutro = LZGame.getStage().attachMovie("you lose", "you lose", LZGame.getStage().getNextHighestDepth());		loseGameOutro._x = 316.9;		loseGameOutro._y = 129;			LZGame.getStage().gotoAndStop("lose");		projectileManager.halt();		screenManager.destroy();		badGuy.destroy();		oracle.destroy();	}	public function getScore():String {		return String(lemmingManager.getLemmingsLeft());	}}