import mx.utils.Delegate;import mx.transitions.Tween;//class PlantManager {	//	private var classScope:RunGame;	private var plants:Array;	private var answerBtns:Array;	private var plantHolder:MovieClip;	private var activePlants:Array;	private var growTween:Tween;	//	public function PlantManager(classScope:RunGame, qList:QuestionList) {		this.classScope = classScope;		plants = new Array();		answerBtns = new Array();		activePlants = new Array();		createPlants(qList);		placePlants();		createAnswerButtons();		activatePlants();	}	public function createPlants(qList:QuestionList):Void {		plantHolder = LZGame.getStage().createEmptyMovieClip("plantHolder", LZGame.getStage().getNextHighestDepth());		for (var i:Number = 0; i < qList.getQTotal(); i++) {			var tmp:Plant = new Plant(qList.getQByIndex(i), plantHolder, i, this);			plants.push(tmp);		}	}	public function placePlants():Void {		var xPos:Number = 0;		var yPos:Number = 330;		var spacing:Number = (600 - 60) / plants.length;		for (var i:Number = 0; i < plants.length; i++) {			plants[i].setPos(xPos, yPos);			xPos += spacing;		}		plantHolder._x = 300 - (plantHolder._width / 2);		plantHolder._y = 0;	}	public function createAnswerButtons():Void {		for (var i:Number = 0; i < plants.length; i++) {			var tmp:Plant = plants[i];			var btn:MovieClip = plantHolder.attachMovie("answerQuestion", "answerQuestion"+i, plantHolder.getNextHighestDepth());			btn._x = tmp.getClip()._x - (btn._width / 2);			btn._y = 370;			btn._scope = classScope;			btn._plantRef = tmp;			btn.onRelease = function() { this._scope.attemptAnswer(this._plantRef) };			answerBtns.push(btn);		}	}	private function attemptAnswer(plant:Plant):Void {		classScope.attemptAnswer(plant);	}	private function activatePlants():Void {		resetActivePlants();		if (activePlants.length != 0) {			grow();		}	}	private function resetActivePlants():Void {		activePlants = new Array();		for (var i:Number = 0; i < plants.length; i++) {			if (plants[i].isGrowing()) {				activePlants.push(plants[i]);			}		}	}	public function blossom(plant:Plant):Void {		for (var i:Number = 0; i < plants.length; i++) {			if (plants[i] == plant) {				var nowGrowing:Plant = plants[i];				var mc:MovieClip = plant.getClip();				var blossomTween:Tween = new Tween(mc, "_y", mx.transitions.easing.Elastic.easeInOut, mc._y, mc._y - nowGrowing.getBlossomRevealHeight(), 2, true);				nowGrowing.setLettersLeft(0);				activePlants.splice(i, 1);				blossomTween.onMotionFinished = Delegate.create(plant, plant.showCorrectFlowerhead);			}		}	}	public function grow():Void {		if (!LZGame.isBusy()) {			if (activePlants.length > 0) {				var rndm:Number = Math.floor(Math.random() * activePlants.length);				var nowGrowing:Plant = activePlants[rndm];				var mc:MovieClip = nowGrowing.getClip();				growTween = new Tween(mc, "_y", mx.transitions.easing.Elastic.easeInOut, mc._y, mc._y - nowGrowing.getNextRevealHeight(), 1.5, true);				nowGrowing.decreaseLettersLeft();				activePlants.splice(rndm, 1);				var continueGrowingDel = Delegate.create(this, continueGrowing);				continueGrowingDel.lastPlant = nowGrowing;				growTween.onMotionFinished = continueGrowingDel;			} else {				activatePlants();			}		}	}	private function continueGrowing():Void {		var tmp:Plant = arguments.caller.lastPlant;		if (!tmp.isGrowing()) {			tmp.showIncorrectFlowerhead();		}		grow();	}	public function reset():Void {		for (var i:Number = 0; i < plants.length; i++) {			plants[i].reset();			answerBtns[i].removeMovieClip();		}		plants = null;		activePlants = null;		answerBtns = null;	}	//	public function getPlantHolder():MovieClip {		return plantHolder;	}	public function getActivePlants():Array {		return activePlants;	}}