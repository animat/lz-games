import mx.utils.Delegate;//class RunGame extends LZGame {	private var phraseManager:PhraseManager;	private var questions:Array;	private var displayedQuestions:Array;		public function RunGame(main:MovieClip) {		super(main);		setInstance(this);				phraseManager = new PhraseManager();		phraseManager.addPhrases(questionList.getQArray());				shuffleQuestions();				createDisplayedQuestions();		setDisplayedText();				phraseManager.activatePhrases();	}		public function evaluate(phrase:Phrase):Boolean {		var collision:Boolean = false;		for (var i:Number = 0; i < displayedQuestions.length && !collision; i++) {			if (displayedQuestions[i].isHitting(phrase.getClip())) {				collision = true;				if (phrase.getPrompt() == displayedQuestions[i].getText()) {					displayedQuestions[i].fadeOut();					phrase.fadeOut();					return true;				}			}		}		phrase.resetPhrase();		return false;	}		private function shuffleQuestions():Void {		var tmp:Array = questionList.getQArray();		questions = new Array();		while (tmp.length > 0) {		    questions.push(tmp.splice(Math.round(Math.random() * (tmp.length - 1)), 1)[0]);		}	}	private function createDisplayedQuestions():Void {		displayedQuestions = new Array();		for (var i:Number = 0; i < 3; i++) {			var tmp:QuestionDisplay = new QuestionDisplay(i);			displayedQuestions[i] = tmp;		}	}		public function setDisplayedText():Void {		for (var i:Number = 0; i < displayedQuestions.length; i++) {			if (displayedQuestions[i].getText() == "") {				if (questions.length > 0) {					var q:Question = Question(questions.pop());					var txt:String = q.getStimulus().getContent();					if (txt == null) {						txt = "";					}				} else {					var txt:String = "";				}				displayedQuestions[i].setText(txt);			}		}		placeDisplayedText();	}		private function placeDisplayedText():Void {		var totalWidth:Number = 0;		var activeQuestions:Array = new Array();		for (var i:Number = 0; i < displayedQuestions.length; i++) {			var tmp:Number = displayedQuestions[i].getWidth();			totalWidth += Math.floor(tmp);			if (tmp != 0) {				activeQuestions.push(displayedQuestions[i]);			}		}				var avgDistance:Number = Math.floor((600 - totalWidth) / activeQuestions.length + 1);		if (avgDistance < 15) {			var topY:Number = 300;			var bottomY:Number = 340;		} else {			var topY:Number = 340;			var bottomY:Number = 340;		}				if (activeQuestions.length == 0) {			activityCompleted();					} else if (activeQuestions.length == 1) {			activeQuestions[0].setPos(300 - (activeQuestions[0].getWidth() / 2), bottomY);		} else if (activeQuestions.length == 2) {			activeQuestions[0].setPos(Math.max(avgDistance - (activeQuestions[0].getWidth() / 2), 15), topY);			activeQuestions[1].setPos(Math.min(600 - avgDistance - (activeQuestions[1].getWidth() / 2), 600 - activeQuestions[1].getWidth() - Math.abs(avgDistance)), bottomY);		} else if (activeQuestions.length == 3) {			displayedQuestions[0].setPos(Math.abs(avgDistance), topY);			displayedQuestions[2].setPos(Math.min(600 - displayedQuestions[2].getWidth() - avgDistance, 600 - displayedQuestions[2].getWidth() - Math.abs(avgDistance)), bottomY);			if (topY != bottomY) {				displayedQuestions[1].setPos(displayedQuestions[0].getTargetX() + displayedQuestions[0].getWidth() + 30, topY);			} else {				displayedQuestions[1].setPos(displayedQuestions[2].getTargetX() - displayedQuestions[1].getWidth() - avgDistance / 2, topY);			}		}	}		public function activityCompleted():Void {		phraseManager.deactivatePhrases();		var tmp:MovieClip = LZGame.getStage().attachMovie("finalMessage", "finalMessage", LZGame.getStage().getNextHighestDepth(),				{_x: 94, _y: 155});	}}